<?php
/**
 * PoiSupplierSupplierSupplierAttributes3101
 *
 * PHP version 5
 *
 * @category Class
 * @package  swagger_client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace swagger_client\Model;

use \ArrayAccess;
use swagger_client\ObjectSerializer;

/**
 * PoiSupplierSupplierSupplierAttributes3101 Class Doc Comment
 *
 * @category Class
 * @description 景区须知
 * @package  swagger_client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PoiSupplierSupplierSupplierAttributes3101 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'supplier_attributes_3101';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'open_time' => 'string',
'open_time_ext' => '\swagger_client\Model\PoiSupplierSupplierNodeStruct[]',
'preferential_policy' => '\swagger_client\Model\PoiSupplierSupplierSupplierAttributes3101PreferentialPolicy[]',
'preferential_policy_ext' => '\swagger_client\Model\PoiSupplierSupplierNodeStruct[]',
'facility' => '\swagger_client\Model\PoiSupplierSupplierSupplierAttributes3101Facility[]',
'play_intro' => '\swagger_client\Model\PoiSupplierSupplierNodeStruct[]',
'traffic' => '\swagger_client\Model\PoiSupplierSupplierNodeStruct[]',
'pet' => 'int',
'scenic_intro' => '\swagger_client\Model\PoiSupplierSupplierNodeStruct[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'open_time' => null,
'open_time_ext' => null,
'preferential_policy' => null,
'preferential_policy_ext' => null,
'facility' => null,
'play_intro' => null,
'traffic' => null,
'pet' => null,
'scenic_intro' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'open_time' => 'open_time',
'open_time_ext' => 'open_time_ext',
'preferential_policy' => 'preferential_policy',
'preferential_policy_ext' => 'preferential_policy_ext',
'facility' => 'facility',
'play_intro' => 'play_intro',
'traffic' => 'traffic',
'pet' => 'pet',
'scenic_intro' => 'scenic_intro'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'open_time' => 'setOpenTime',
'open_time_ext' => 'setOpenTimeExt',
'preferential_policy' => 'setPreferentialPolicy',
'preferential_policy_ext' => 'setPreferentialPolicyExt',
'facility' => 'setFacility',
'play_intro' => 'setPlayIntro',
'traffic' => 'setTraffic',
'pet' => 'setPet',
'scenic_intro' => 'setScenicIntro'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'open_time' => 'getOpenTime',
'open_time_ext' => 'getOpenTimeExt',
'preferential_policy' => 'getPreferentialPolicy',
'preferential_policy_ext' => 'getPreferentialPolicyExt',
'facility' => 'getFacility',
'play_intro' => 'getPlayIntro',
'traffic' => 'getTraffic',
'pet' => 'getPet',
'scenic_intro' => 'getScenicIntro'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['open_time'] = isset($data['open_time']) ? $data['open_time'] : null;
        $this->container['open_time_ext'] = isset($data['open_time_ext']) ? $data['open_time_ext'] : null;
        $this->container['preferential_policy'] = isset($data['preferential_policy']) ? $data['preferential_policy'] : null;
        $this->container['preferential_policy_ext'] = isset($data['preferential_policy_ext']) ? $data['preferential_policy_ext'] : null;
        $this->container['facility'] = isset($data['facility']) ? $data['facility'] : null;
        $this->container['play_intro'] = isset($data['play_intro']) ? $data['play_intro'] : null;
        $this->container['traffic'] = isset($data['traffic']) ? $data['traffic'] : null;
        $this->container['pet'] = isset($data['pet']) ? $data['pet'] : null;
        $this->container['scenic_intro'] = isset($data['scenic_intro']) ? $data['scenic_intro'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets open_time
     *
     * @return string
     */
    public function getOpenTime()
    {
        return $this->container['open_time'];
    }

    /**
     * Sets open_time
     *
     * @param string $open_time 开放时间
     *
     * @return $this
     */
    public function setOpenTime($open_time)
    {
        $this->container['open_time'] = $open_time;

        return $this;
    }

    /**
     * Gets open_time_ext
     *
     * @return \swagger_client\Model\PoiSupplierSupplierNodeStruct[]
     */
    public function getOpenTimeExt()
    {
        return $this->container['open_time_ext'];
    }

    /**
     * Sets open_time_ext
     *
     * @param \swagger_client\Model\PoiSupplierSupplierNodeStruct[] $open_time_ext 开放时间-扩展区(不超过200个汉字)
     *
     * @return $this
     */
    public function setOpenTimeExt($open_time_ext)
    {
        $this->container['open_time_ext'] = $open_time_ext;

        return $this;
    }

    /**
     * Gets preferential_policy
     *
     * @return \swagger_client\Model\PoiSupplierSupplierSupplierAttributes3101PreferentialPolicy[]
     */
    public function getPreferentialPolicy()
    {
        return $this->container['preferential_policy'];
    }

    /**
     * Sets preferential_policy
     *
     * @param \swagger_client\Model\PoiSupplierSupplierSupplierAttributes3101PreferentialPolicy[] $preferential_policy 优待政策(不超过200个汉字)
     *
     * @return $this
     */
    public function setPreferentialPolicy($preferential_policy)
    {
        $this->container['preferential_policy'] = $preferential_policy;

        return $this;
    }

    /**
     * Gets preferential_policy_ext
     *
     * @return \swagger_client\Model\PoiSupplierSupplierNodeStruct[]
     */
    public function getPreferentialPolicyExt()
    {
        return $this->container['preferential_policy_ext'];
    }

    /**
     * Sets preferential_policy_ext
     *
     * @param \swagger_client\Model\PoiSupplierSupplierNodeStruct[] $preferential_policy_ext 优待政策-扩展区(不超过1000个汉字)
     *
     * @return $this
     */
    public function setPreferentialPolicyExt($preferential_policy_ext)
    {
        $this->container['preferential_policy_ext'] = $preferential_policy_ext;

        return $this;
    }

    /**
     * Gets facility
     *
     * @return \swagger_client\Model\PoiSupplierSupplierSupplierAttributes3101Facility[]
     */
    public function getFacility()
    {
        return $this->container['facility'];
    }

    /**
     * Sets facility
     *
     * @param \swagger_client\Model\PoiSupplierSupplierSupplierAttributes3101Facility[] $facility 服务设施列表
     *
     * @return $this
     */
    public function setFacility($facility)
    {
        $this->container['facility'] = $facility;

        return $this;
    }

    /**
     * Gets play_intro
     *
     * @return \swagger_client\Model\PoiSupplierSupplierNodeStruct[]
     */
    public function getPlayIntro()
    {
        return $this->container['play_intro'];
    }

    /**
     * Sets play_intro
     *
     * @param \swagger_client\Model\PoiSupplierSupplierNodeStruct[] $play_intro 玩法介绍(不超过200个汉字)
     *
     * @return $this
     */
    public function setPlayIntro($play_intro)
    {
        $this->container['play_intro'] = $play_intro;

        return $this;
    }

    /**
     * Gets traffic
     *
     * @return \swagger_client\Model\PoiSupplierSupplierNodeStruct[]
     */
    public function getTraffic()
    {
        return $this->container['traffic'];
    }

    /**
     * Sets traffic
     *
     * @param \swagger_client\Model\PoiSupplierSupplierNodeStruct[] $traffic 交通(不超过200个汉字)
     *
     * @return $this
     */
    public function setTraffic($traffic)
    {
        $this->container['traffic'] = $traffic;

        return $this;
    }

    /**
     * Gets pet
     *
     * @return int
     */
    public function getPet()
    {
        return $this->container['pet'];
    }

    /**
     * Sets pet
     *
     * @param int $pet 宠物携带(1:可携带宠物，2:不可携带宠物)
     *
     * @return $this
     */
    public function setPet($pet)
    {
        $this->container['pet'] = $pet;

        return $this;
    }

    /**
     * Gets scenic_intro
     *
     * @return \swagger_client\Model\PoiSupplierSupplierNodeStruct[]
     */
    public function getScenicIntro()
    {
        return $this->container['scenic_intro'];
    }

    /**
     * Sets scenic_intro
     *
     * @param \swagger_client\Model\PoiSupplierSupplierNodeStruct[] $scenic_intro 景点介绍(不超过2000个汉字)
     *
     * @return $this
     */
    public function setScenicIntro($scenic_intro)
    {
        $this->container['scenic_intro'] = $scenic_intro;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
